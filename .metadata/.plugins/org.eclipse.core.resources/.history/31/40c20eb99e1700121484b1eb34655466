package fi.harism.curl;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Paint;
import android.graphics.drawable.Drawable;
import android.util.AttributeSet;
import android.util.Log;
import android.view.ScaleGestureDetector;
import android.view.View;
import android.view.ScaleGestureDetector.SimpleOnScaleGestureListener;
import android.widget.RelativeLayout;

public class ZoomableRelativeLayout extends RelativeLayout {
	float mScaleFactor = (float) 1.5;
	float mPivotX;
	float mPivotY;

	public ZoomableRelativeLayout(Context context) {
		super(context);
		// TODO Auto-generated constructor stub
	}

	public ZoomableRelativeLayout(Context context, AttributeSet attrs) {
		super(context, attrs);
		// TODO Auto-generated constructor stub
	}

	public ZoomableRelativeLayout(Context context, AttributeSet attrs,
			int defStyle) {
		super(context, attrs, defStyle);
		// TODO Auto-generated constructor stub
	}

	protected void dispatchDraw(Canvas canvas) {
		canvas.save(Canvas.MATRIX_SAVE_FLAG);
		canvas.scale(mScaleFactor, mScaleFactor, mPivotX, mPivotY);
		super.dispatchDraw(canvas);
		canvas.restore();
	}

	public void scale(float scaleFactor, float pivotX, float pivotY) {
		mScaleFactor = scaleFactor;
		mPivotX = pivotX;
		mPivotY = pivotY;
		this.invalidate();
	}

	public void restore() {
		mScaleFactor = 1;
		this.invalidate();
	}

	private class OnPinchListener extends ScaleGestureDetector.SimpleOnScaleGestureListener {

		float startingSpan;
		float endSpan;
		float startFocusX;
		float startFocusY;
		ZoomableRelativeLayout mZoomableRelativeLayout;

		public boolean onScaleBegin(ScaleGestureDetector detector) {
			startingSpan = detector.getCurrentSpan();
			startFocusX = detector.getFocusX();
			startFocusY = detector.getFocusY();
			mZoomableRelativeLayout=new ZoomableRelativeLayout(null);
			return true;
		}

		public boolean onScale(ScaleGestureDetector detector) {
			mZoomableRelativeLayout.scale(detector.getCurrentSpan() / startingSpan,
					startFocusX, startFocusY);
			return true;
		}

		public void onScaleEnd(ScaleGestureDetector detector) {
			mZoomableRelativeLayout.restore();
		}
	}

}
