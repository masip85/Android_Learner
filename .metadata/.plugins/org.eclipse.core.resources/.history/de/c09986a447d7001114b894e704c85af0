package com.artifex.mupdf;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Paint.Style;
import android.graphics.Point;
import android.graphics.drawable.Drawable;

import com.example.visorpdf.R;

public class MuPDFPageView extends PageView {
	private final MuPDFCore mCore;
private Drawable miImagen;
	public MuPDFPageView(Context c, MuPDFCore core, Point parentSize) {
		super(c, parentSize);
		mCore = core;
	}

	public int hitLinkPage(float x, float y) {
		// Since link highlighting was implemented, the super class
		// PageView has had sufficient information to be able to
		// perform this method directly. Making that change would
		// make MuPDFCore.hitLinkPage superfluous.
		float scale = mSourceScale*(float)getWidth()/(float)mSize.x;
		float docRelX = (x - getLeft())/scale;
		float docRelY = (y - getTop())/scale;

		return mCore.hitLinkPage(mPageNumber, docRelX, docRelY);
	}

	@Override
	protected void drawPage(Bitmap bm, int sizeX, int sizeY,
			int patchX, int patchY, int patchWidth, int patchHeight) {
		
		System.out.println("EN DRAWPAGE");
		
		
		Canvas canvas=new Canvas();
		 //Dibujo
				 Paint pincel=new Paint();
				 pincel.setColor(Color.BLUE);
				 pincel.setStrokeWidth(8);
				 pincel.setStyle(Style.STROKE);
				 canvas.drawCircle(150, 150, 100, pincel);
				 pincel.setColor(Color.argb(127,255,0,0));
				 canvas.drawCircle(150, 150, 100, pincel);
//				 canvas.drawBitmap(bm, 60, 60, pincel);
				canvas.setBitmap(bm);
				Resource res=context.getResources();
				miImagen=res.getDrawable(R.drawable.miImagen);
				bm = BitmapFactory.decodeResource(getResources(), R.drawable.miImagen);
		mCore.drawPage(mPageNumber, bm, sizeX, sizeY, patchX, patchY, patchWidth, patchHeight);
		
	}

	@Override
	protected LinkInfo[] getLinkInfo() {
		return mCore.getPageLinks(mPageNumber);
	}
}
