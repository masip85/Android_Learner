package es.cvmaker.upv.aplicacion;

import java.io.File;

import android.app.TabActivity;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.Drawable;
import android.os.Bundle;
import android.os.IInterface;
import android.util.Log;
import android.view.View;
import android.view.ViewManager;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.DatePicker;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.SeekBar;
import android.widget.SeekBar.OnSeekBarChangeListener;
import android.widget.Spinner;
import android.widget.TabHost;
import android.widget.TextView;
import es.cvmaker.upv.R;

public class Actividad_Editar extends TabActivity {
	int maxModulos = 5;
	int maxEntradas = 10;
	int i=0;
	TabHost tabHost = new TabHost(null);
	LinearLayout cvLayoutModulos[] = new LinearLayout[maxEntradas];  // layouts del tab  que contiene todos los modulos
	View cvLayoutModulo[][] = new View[maxEntradas][maxModulos]; // array de layouts donde se mete cada modulo
	View tabExtra[]=new View[maxEntradas];
	RelativeLayout cvLayoutMasMenos[]=new RelativeLayout[maxEntradas]; // array de layouts que contiene el mas_menos
	// Ojo,al maxEntradas [cv2 cv3 cv4 cv6 ... maxEntradas] <- Es donde hay modulos
	Integer cvContadorModulos[]=new Integer[maxEntradas];  //[cv2 cv3 cv4 cv6 ... maxEntradas] <- Es donde hay modulos
	String[] cv2AñoInicio,cv2AñoFin, cv3AñoInicio, cv3AñoFin;
	int tagTabActual;
	// / / / / / / / / / / / / / / / / /CV1 / / / / / / / / / / / / / / / / / /
	Drawable foto;
	public static final int PETICION_CAMARA = 2000;
	public static final int PETICION_CARGARFOTO=1000;
	String rutaFicheroSeleccionado="";
	EditText cv1EditNombre;
	EditText cv1EditEmail;
	EditText cv1EditLocalidad;
	EditText cv1EditTelefono;
	DatePicker cv1DatePicker;
	// / / / / / / / / / / / / / / / / /CV2 / / / / / / / / / / / / / / / /
	EditText cv2EditLocalidad[]=new EditText[maxEntradas];
	EditText cv2EditCentro[]=new EditText[maxEntradas];
	EditText cv2EditEstudios[]=new EditText[maxEntradas];
	// / / / / / / / / / / / / / / / / /CV3 / / / / / / / / / / / / / / / /
	EditText cv3EditTrabajo[]=new EditText[maxEntradas];
	EditText cv3EditCentro[]=new EditText[maxEntradas];
	EditText cv3EditDescripcion[]=new EditText[maxEntradas];
	// / / / / / / / / / / / / / / / / /CV2 y CV3 / / / / / / / / / / / / / / / /
	Spinner spinnerArray1[][] = new Spinner[2][maxModulos];  // array spinners año inicio de todos los tabs y modulos
	Spinner spinnerArray2[][] = new Spinner[2][maxModulos]; // array spinners año fin de todos los tabs y modulos
	// Ojo solo hay spinners en cv2 y cv3
	String spinnerItemSeleccionado1[][] = new String[2][maxModulos];// la primera dimension de los spinners te dice en que cv se encuentra: cv2 o cv3
	String spinnerItemSeleccionado2[][] = new String[2][maxModulos];
	MyOnItemSelectedListener spinnerListener1[][] = new MyOnItemSelectedListener[2][maxModulos]; // respectivos listeners de los spinners
	MyOnItemSelectedListener spinnerListener2[][] = new MyOnItemSelectedListener[2][maxModulos];
	// / / / / / / / / / / / / / / / / /CV4 / / / / / / / / / / / / / / / /
	SeekBar cv4SeekBarIdioma[][] = new SeekBar[3][maxEntradas]; // la primera dimension es para los 3 tipos de habilidad(Escrito,hablado,y lectura)
	TextView cv4TextViewIdioma[][]=new TextView[3][maxEntradas];
	EditText cv4EditIdioma[]=new EditText[maxEntradas];
	// / / / / / / / / / / / / / / / / /CV5 / / / / / / / / / / / / / / / /
	CheckBox cv5CheckBox_1;
	CheckBox cv5CheckBox_2;
	CheckBox cv5CheckBox_3;
	CheckBox cv5CheckBox_4;
	// / / / / / / / / / / / / / / / / /CV5 / / / / / / / / / / / / / / / /
	EditText cv6EditTitulo[]=new EditText[maxEntradas];
	EditText cv6EditSubtitulo[][]=new EditText[maxEntradas][maxModulos];
	EditText cv6EditCampo[][]=new EditText[maxEntradas][maxModulos];
	int contadorGenericoExtra=0;
	// / / / / / / / / / / / / / / / / /CV6 / / / / / / / / / / / / / / / /
	int idTabExtra;
	int tagTabCreado; 
	int tabActual; 
	int tabCreado; 

	
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.actividad_editar_scroll_tab);
		
		// Defino los tabs
		tabHost = getTabHost();
		tabHost.addTab(tabHost.newTabSpec("tab1").setIndicator("Titulo1", null)
				.setContent(R.id.tab1Layout));
		tabHost.addTab(tabHost.newTabSpec("tab2").setIndicator("Titulo2", null)
				.setContent(R.id.tab2Layout));
		tabHost.addTab(tabHost.newTabSpec("tab3").setIndicator("Titulo3", null)
				.setContent(R.id.tab3Layout));
		tabHost.addTab(tabHost.newTabSpec("tab4").setIndicator("Titulo4", null)
				.setContent(R.id.tab4Layout));
		tabHost.addTab(tabHost.newTabSpec("tab5").setIndicator("Titulo5", null)
				.setContent(R.id.tab5Layout));
		tabHost.addTab(tabHost.newTabSpec("tab6").setIndicator("Titulo6", null)
				.setContent(R.id.tab6Layout));
		for (int j = 0;j<cvContadorModulos.length;j++){
			cvContadorModulos[j]=0; // Inicializo contadores de modulos
		}

		// / / / / / / / / / / / / / / / / /CV1 / / / / / / / / / / / / / / / / / /
		// Defino datePicker
		cv1DatePicker = (DatePicker) findViewById(R.id.cv1DatePicker);
		// datePicker.getDayOfMonth();
		// datePicker.getMonth();
		// datePicker.getYear();
		// Pongo en la foto la silueta
		ImageView imageView = (ImageView) findViewById(R.id.cv1ImageViewFoto);
		Drawable drawable = getResources().getDrawable(R.drawable.silueta);
		imageView.setImageResource(0); // ¿hace falta?
		imageView.setImageDrawable(drawable);
		// Defino los EditText
		cv1EditNombre=(EditText)findViewById(R.id.cv1EditNombre);
		cv1EditEmail=(EditText)findViewById(R.id.cv1EditEmail);
		cv1EditLocalidad=(EditText)findViewById(R.id.cv1EditLocalidad);
		cv1EditTelefono=(EditText)findViewById(R.id.cv1EditTelefono);

		// / / / / / / / / / / / / / / / / /CV2 / / / / / / / / / / / / / / / /
		cvLayoutModulos[0] = (LinearLayout) findViewById(R.id.cv2LayoutModulos);
		cvLayoutModulo[0][cvContadorModulos[0]] = (View) findViewById(R.id.cv2LayoutModulo);
		setSpinner(R.array.ano,R.id.cv2SpinnerAnoInicio,R.id.cv2SpinnerAnoInicio, 0, 0, cvContadorModulos[0]);
		setSpinner(R.array.ano,R.id.cv2SpinnerAnoInicio,R.id.cv2SpinnerAnoFin, 0, 1, cvContadorModulos[0]);
		// Defino los EditText
		cv2EditEstudios[cvContadorModulos[0]]=(EditText) cvLayoutModulo[0][cvContadorModulos[0]].findViewById(R.id.cv2EditEstudios);
		cv2EditCentro[cvContadorModulos[0]]=(EditText) cvLayoutModulo[0][cvContadorModulos[0]].findViewById(R.id.cv2EditCentro);
		cv2EditLocalidad[cvContadorModulos[0]]=(EditText) cvLayoutModulo[0][cvContadorModulos[0]].findViewById(R.id.cv2EditLocalidad);
		// / / / / / / / / / / / / / / / / /CV3 / / / / / / / / / / / / / / / /
		cvLayoutModulos[1] = (LinearLayout) findViewById(R.id.cv3LayoutModulos);
		cvLayoutModulo[1][cvContadorModulos[1]] = (View) findViewById(R.id.cv3LayoutModulo);
		setSpinner(R.array.ano,R.id.cv3SpinnerAnoInicio,R.id.cv3SpinnerAnoFin,1, 0, cvContadorModulos[1]);
		setSpinner(R.array.ano,R.id.cv3SpinnerAnoInicio,R.id.cv3SpinnerAnoFin, 1, 1, cvContadorModulos[1]);
		// Defino los EditText
		cv3EditTrabajo[cvContadorModulos[1]]=(EditText) cvLayoutModulo[1][cvContadorModulos[1]].findViewById(R.id.cv3EditTrabajo);
		cv3EditCentro[cvContadorModulos[1]]=(EditText) cvLayoutModulo[1][cvContadorModulos[1]].findViewById(R.id.cv3EditCentro);
		cv3EditDescripcion[cvContadorModulos[1]]=(EditText) cvLayoutModulo[1][cvContadorModulos[1]].findViewById(R.id.cv3EditDescripcion);
		// / / / / / / / / / / / / / / / / /CV4 / / / / / / / / / / / / / / / /
		cvLayoutModulos[2] = (LinearLayout) findViewById(R.id.cv4LayoutModulos);
		cvLayoutModulo[2][cvContadorModulos[2]] = (View) findViewById(R.id.cv4LayoutModulo);
		setSeekBar(0,cvContadorModulos[2],R.id.cv4SeekBarHablado,R.id.cv4TextViewSeekBarHablado);
		setSeekBar(1,cvContadorModulos[2],R.id.cv4SeekBarEscrito,R.id.cv4TextViewSeekBarEscrito);
		setSeekBar(2,cvContadorModulos[2],R.id.cv4SeekBarLectura,R.id.cv4TextViewSeekBarLectura);
		listenSeekBars(cvContadorModulos[2]);
		// / / / / / / / / / / / / / / / / /CV5 / / / / / / / / / / / / / / / /
		cv5CheckBox_1=(CheckBox) findViewById(R.id.cv5CheckBox1);
		cv5CheckBox_2=(CheckBox) findViewById(R.id.cv5CheckBox2);
		cv5CheckBox_3=(CheckBox) findViewById(R.id.cv5CheckBox3);
		cv5CheckBox_4=(CheckBox) findViewById(R.id.cv5CheckBox4);
		// / / / / / / / / / / / / / / / / /CV6 / / / / / / / / / / / / / / / /
		cvLayoutModulos[3] = (LinearLayout) findViewById(R.id.cv6LayoutModulos);
		cvLayoutModulo[3][cvContadorModulos[3]] = (View) findViewById(R.id.cv6LayoutModulo);
		cv6EditTitulo[0]=(EditText) findViewById(R.id.cv6EditTituloCampo);
		cv6EditSubtitulo[0][cvContadorModulos[3]]=(EditText) findViewById(R.id.cv6EditSubtituloCampo);
		cv6EditCampo[0][cvContadorModulos[3]]=(EditText) findViewById(R.id.cv6EditCampo);

	}
	
	protected void onActivityResult(int requestCode, int resultCode, Intent data) {
		if (requestCode == PETICION_CARGARFOTO & resultCode == RESULT_OK) {
			rutaFicheroSeleccionado = data.getExtras().getString(
					"RutaArchivoSeleccionado");

			File imgFile = new File(rutaFicheroSeleccionado);
			if (imgFile.exists()) {
				Bitmap myBitmap = BitmapFactory.decodeFile(imgFile
						.getAbsolutePath());
				ImageView myImage = (ImageView) findViewById(R.id.cv1ImageViewFoto);
				myImage.setImageBitmap(myBitmap);
			}
		}
		if (requestCode == PETICION_CAMARA) {
			Bitmap photo = (Bitmap) data.getExtras().get("data");
			ImageView imageView = (ImageView) findViewById(R.id.cv1ImageViewFoto);
			imageView.setImageBitmap(photo);
		}
	}
	
	public void setSeekBar(int Habilidad, int cvContador, int resSeekBarId,
			int resTextView) {

		cv4SeekBarIdioma[Habilidad][cvContador] = (SeekBar) cvLayoutModulo[2][cvContador]
				.findViewById(resSeekBarId);
		cv4SeekBarIdioma[Habilidad][cvContador].setMax(100);
		cv4SeekBarIdioma[Habilidad][cvContador].setProgress(30);
		cv4TextViewIdioma[Habilidad][cvContador] = (TextView) cvLayoutModulo[2][cvContador]
				.findViewById(resTextView);
		cv4TextViewIdioma[Habilidad][cvContador].setText("Bueno");

	}

	public void listenSeekBars(final int cvContador) {
			cv4SeekBarIdioma[0][cvContador]
					.setOnSeekBarChangeListener(new OnSeekBarChangeListener() {
						public void onProgressChanged(SeekBar seekBar,
								int progress, boolean fromUser) {
							if (seekBar.getProgress() < 25) {
								cv4TextViewIdioma[0][cvContador]
										.setText("Regular");
							}
							if (seekBar.getProgress() > 25
									&& seekBar.getProgress() < 50) {
								cv4TextViewIdioma[0][cvContador].setText("Bueno");
							}
							if (seekBar.getProgress() > 50
									&& seekBar.getProgress() < 75) {
								cv4TextViewIdioma[0][cvContador]
										.setText("Muy bueno");
							}
							if (seekBar.getProgress() > 75) {
								cv4TextViewIdioma[0][cvContador]
										.setText("Excelente");
							}
						}
						public void onStartTrackingTouch(SeekBar seekBar) {
						}
						public void onStopTrackingTouch(SeekBar seekBar) {
						}
					});
			cv4SeekBarIdioma[1][cvContador]
					.setOnSeekBarChangeListener(new OnSeekBarChangeListener() {
						public void onProgressChanged(SeekBar seekBar,
								int progress, boolean fromUser) {
							if (seekBar.getProgress() < 25) {
								cv4TextViewIdioma[1][cvContador]
										.setText("Regular");
							}
							if (seekBar.getProgress() > 25
									&& seekBar.getProgress() < 50) {
								cv4TextViewIdioma[1][cvContador].setText("Bueno");
							}
							if (seekBar.getProgress() > 50
									&& seekBar.getProgress() < 75) {
								cv4TextViewIdioma[1][cvContador]
										.setText("Muy bueno");
							}
							if (seekBar.getProgress() > 75) {
								cv4TextViewIdioma[1][cvContador]
										.setText("Excelente");
							}
						}
						public void onStartTrackingTouch(SeekBar seekBar) {
						}
						public void onStopTrackingTouch(SeekBar seekBar) {
						}
					});
		cv4SeekBarIdioma[2][cvContador]
				.setOnSeekBarChangeListener(new OnSeekBarChangeListener() {
					public void onProgressChanged(SeekBar seekBar,
							int progress, boolean fromUser) {
						if (seekBar.getProgress() < 25) {
							cv4TextViewIdioma[2][cvContador].setText("Regular");
						}
						if (seekBar.getProgress() > 25
								&& seekBar.getProgress() < 50) {
							cv4TextViewIdioma[2][cvContador].setText("Bueno");
						}
						if (seekBar.getProgress() > 50
								&& seekBar.getProgress() < 75) {
							cv4TextViewIdioma[2][cvContador].setText("Muy bueno");
						}
						if (seekBar.getProgress() > 75) {
							cv4TextViewIdioma[2][cvContador].setText("Excelente");
						}
					}

					public void onStartTrackingTouch(SeekBar seekBar) {
					}

					public void onStopTrackingTouch(SeekBar seekBar) {
					}
				});
	}

	public void setSpinner(int resStringId,int resSpinnerInicioId,int resSpinnerFinId, int cv, int pos, int cvContador) {

		String[] stringItemsSpinner = getResources()
				.getStringArray(resStringId);

		ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
				android.R.layout.simple_spinner_item, stringItemsSpinner);
		adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
		if (pos == 0) {
			spinnerArray1[cv][cvContador] = (Spinner) cvLayoutModulo[cv][cvContador]
					.findViewById(resSpinnerInicioId);
			spinnerArray1[cv][cvContador].setAdapter(adapter);
			spinnerArray1[cv][cvContador].setSelection(58);
		} else {
			spinnerArray2[cv][cvContador] = (Spinner) cvLayoutModulo[cv][cvContador]
					.findViewById(resSpinnerFinId);
			spinnerArray2[cv][cvContador].setAdapter(adapter);
			spinnerArray2[cv][cvContador].setSelection(68);
		}
	}

	public void listenSpinner(int cv, int pos, int cvContador) {
		if (pos == 0) {
			spinnerListener1[cv][cvContador] = new MyOnItemSelectedListener();
			spinnerArray1[cv][cvContador]
					.setOnItemSelectedListener(spinnerListener1[cv][cvContador]);
			spinnerItemSeleccionado1[cv][cvContador] = spinnerListener1[cv][cvContador].getSeleccion();
		} else {
			spinnerListener2[cv][cvContador] = new MyOnItemSelectedListener();
			spinnerArray2[cv][cvContador]
					.setOnItemSelectedListener(spinnerListener1[cv][cvContador]);
			spinnerItemSeleccionado2[cv][cvContador] = spinnerListener2[cv][cvContador].getSeleccion();

		}
	}

	

	public void lanzarcvMas(View view) {
		
//		int tagTabActual=Integer.parseInt(tabHost.getCurrentView().getTag().toString());
		View view2=(View) view.getParent().getParent().getParent().getParent(); // cojo el tag del layout madre de cada tab
		int tagTabActual=Integer.parseInt(view2.getTag().toString());
		Log.i(Integer.toString(tagTabActual),"añado mas1");

		int RLayoutModulos=0,RBotonMas=0,RBotonMenos=0,RLayoutModulo=0,RLayoutMasMenos=0;
		// cv=0 - Tab2-Academicos // cv=1 Tab3-Laboral// 
		//cv=2 Tab4-Idiomas // cv=3 -Tab6 Generico 
		// cv=[4 maxEntradas] - Tab7... Tab"x" Genericos extras
		// Recordar que el contador de modulos la misma relacion://[0:Tab2 1:tab3 2:tab4 3:tab6 4:tab7xtra ... maxEntradas] <- Es donde hay modulos
		switch (tagTabActual) {
		case 0:
			i=tagTabActual;
			RLayoutModulos=R.id.cv2LayoutModulos;
			RBotonMas=R.id.cv2BotonMas;
			RBotonMenos=R.id.cv2BotonMenos;
			RLayoutMasMenos=R.layout.actividad_cv2_datosacademicos_mas_menos;
			RLayoutModulo=R.layout.actividad_cv2_datosacademicos_modulo;
			break;
		case 1:
			i=tagTabActual;
			RLayoutModulos=R.id.cv3LayoutModulos;
			RBotonMas=R.id.cv3BotonMas;
			RBotonMenos=R.id.cv3BotonMenos;
			RLayoutMasMenos=R.layout.actividad_cv3_experiencialaboral_mas_menos;
			RLayoutModulo=R.layout.actividad_cv3_experiencialaboral_modulo;
			break;	
		case 2:
			i=tagTabActual;
			RLayoutModulos=R.id.cv4LayoutModulos;
			RBotonMas=R.id.cv4BotonMas;
			RBotonMenos=R.id.cv4BotonMenos;
			RLayoutMasMenos=R.layout.actividad_cv4_idiomas_mas_menos;
			RLayoutModulo=R.layout.actividad_cv4_idiomas_modulo;
			break;
		case 3:
			i=tagTabActual;
			RLayoutModulos=R.id.cv6LayoutModulos;
			RBotonMas=R.id.cv6BotonMas;
			RBotonMenos=R.id.cv6BotonMenos;
			RLayoutMasMenos=R.layout.actividad_cv6_generico_mas_menos;
			RLayoutModulo=R.layout.actividad_cv6_generico_modulo;
			break;
		default:
			i=tagTabActual;
			RLayoutModulos=R.id.cv6LayoutModulos;
			RBotonMas=R.id.cv6BotonMas;
			RBotonMenos=R.id.cv6BotonMenos;
			RLayoutMasMenos=R.layout.actividad_cv6_generico_mas_menos;
			RLayoutModulo=R.layout.actividad_cv6_generico_modulo;
			
			
			
			break;
		}
		// Ahora, añado un nuevo modulo
		cvContadorModulos[i]++;
		if (cvContadorModulos[i] < maxModulos && i<=3) {
		
			cvLayoutModulos[i]=(LinearLayout) findViewById(RLayoutModulos);
			
			Button botonMas = (Button) findViewById(RBotonMas);
			Button botonMenos = (Button) findViewById(RBotonMenos);
			((ViewManager) botonMas.getParent()).removeView(botonMas); // Borro el boton mas y menos 
			((ViewManager) botonMenos.getParent()).removeView(botonMenos);// del layout															
																			
			cvLayoutModulo[i][cvContadorModulos[i]] = this.getLayoutInflater().inflate(
					RLayoutModulo, null, true); // Añado con inflate. Lo hago en dos pasos
												// en este paso previo me guardo en un View					
												// el nuevo modulo								
																				
																				
			cvLayoutModulos[i].addView(cvLayoutModulo[i][cvContadorModulos[i]]); // Añado este modulo en su
																				 // layout de modulos
//			View view3=getLayoutInflater().inflate(
//					RLayoutMasMenos, null);		
//			view3.setTag(i);
			cvLayoutModulos[i].addView(getLayoutInflater().inflate(
					RLayoutMasMenos, null)); // Añado el layout de los botones mas menos de nuevo
			Button botonMenos2 = (Button) cvLayoutModulos[i].findViewById(RBotonMenos);
			botonMenos2.setVisibility(ImageButton.VISIBLE);// Boton menos visible

			if (cvContadorModulos[i] == maxModulos) {
				botonMas.setEnabled(false);
			}
		}
		
		if (i>3){ // en los casos de los genericos,como son generados ellos mismos por inflates,
			      // no los puedo inflar exactamente igual. a los recursos de los generados 
				  // accedo especificando los mismos, y el cvLayoutModulos se genera en la funcion "nuevo"
			
			Button botonMas = (Button) cvLayoutModulos[i].findViewById(RBotonMas);
			Button botonMenos = (Button) cvLayoutModulos[i].findViewById(RBotonMenos);
			((ViewManager) botonMas.getParent()).removeView(botonMas); 
			((ViewManager) botonMenos.getParent()).removeView(botonMenos);
			
			cvLayoutModulo[i][cvContadorModulos[i]] = (View) this.getLayoutInflater().inflate(
					RLayoutModulo, null, true);
			
			cvLayoutModulos[i].addView(cvLayoutModulo[i][cvContadorModulos[i]]);
			cvLayoutModulos[i].addView(getLayoutInflater().inflate(
					RLayoutMasMenos, null)); // Añado el layout de los botones mas menos de nuevo
			Button botonMenos2 = (Button) cvLayoutModulos[i].findViewById(RBotonMenos);
			botonMenos2.setVisibility(ImageButton.VISIBLE);// Boton menos visible

			if (cvContadorModulos[i] == maxModulos) {
				botonMas.setEnabled(false);
			}
			
			
		}
		// Paso a recoger en los array los elementos del modulo nuevo
		switch (tagTabActual) {
		case 0:
			//Defino los nuevos EditText
			cv2EditEstudios[cvContadorModulos[i]]=(EditText) cvLayoutModulo[i][cvContadorModulos[i]].findViewById(R.id.cv2EditEstudios);
			cv2EditCentro[cvContadorModulos[i]]=(EditText) cvLayoutModulo[i][cvContadorModulos[i]].findViewById(R.id.cv2EditCentro);
			cv2EditLocalidad[cvContadorModulos[i]]=(EditText) cvLayoutModulo[i][cvContadorModulos[i]].findViewById(R.id.cv2EditLocalidad);
			// Preparo los nuevos Spinners
			setSpinner(R.array.ano,R.id.cv2SpinnerAnoInicio,R.id.cv2SpinnerAnoFin, i, 0, cvContadorModulos[i]);
			listenSpinner(i, 0, cvContadorModulos[i]);
			setSpinner(R.array.ano,R.id.cv2SpinnerAnoInicio,R.id.cv2SpinnerAnoFin,i, 1, cvContadorModulos[i]);
			listenSpinner(i, 1, cvContadorModulos[i]);	
			
			break;
		case 1:
			//Defino los nuevos EditText
			cv3EditTrabajo[cvContadorModulos[i]]=(EditText) cvLayoutModulo[i][cvContadorModulos[i]].findViewById(R.id.cv3EditTrabajo);
			cv3EditCentro[cvContadorModulos[i]]=(EditText) cvLayoutModulo[i][cvContadorModulos[i]].findViewById(R.id.cv3EditCentro);
			cv3EditDescripcion[cvContadorModulos[i]]=(EditText) cvLayoutModulo[i][cvContadorModulos[i]].findViewById(R.id.cv3EditDescripcion);
			// Preparo los nuevos Spinners
			setSpinner(R.array.ano,R.id.cv3SpinnerAnoInicio,R.id.cv3SpinnerAnoFin, i, 0, cvContadorModulos[i]);
			listenSpinner(i, 0, cvContadorModulos[i]);
			setSpinner(R.array.ano,R.id.cv3SpinnerAnoInicio,R.id.cv3SpinnerAnoFin,i, 1, cvContadorModulos[i]);
			listenSpinner(i, 1, cvContadorModulos[i]);
			break;
		case 2:
			//Defino el nuevo EditText
			cv4EditIdioma[cvContadorModulos[i]]=(EditText) cvLayoutModulo[i][cvContadorModulos[i]].findViewById(R.id.cv4EditIdioma);
			// Defino los nuevos SeekBars
			setSeekBar(0,cvContadorModulos[i],R.id.cv4SeekBarHablado,R.id.cv4TextViewSeekBarHablado);
			setSeekBar(1,cvContadorModulos[i],R.id.cv4SeekBarEscrito,R.id.cv4TextViewSeekBarEscrito);
			setSeekBar(2,cvContadorModulos[i],R.id.cv4SeekBarLectura,R.id.cv4TextViewSeekBarLectura);
			listenSeekBars(cvContadorModulos[i]);
			break;
		case 3:
			cv6EditSubtitulo[i][cvContadorModulos[i]]=(EditText) cvLayoutModulo[i][cvContadorModulos[i]].findViewById(R.id.cv6EditSubtituloCampo);
			cv6EditCampo[i][cvContadorModulos[i]]=(EditText) cvLayoutModulo[i][cvContadorModulos[i]].findViewById(R.id.cv6EditCampo);
			break;

		default:
			cv6EditSubtitulo[i][cvContadorModulos[i]]=(EditText) cvLayoutModulo[i][cvContadorModulos[i]].findViewById(R.id.cv6EditSubtituloCampo);
			cv6EditCampo[i][cvContadorModulos[i]]=(EditText) cvLayoutModulo[i][cvContadorModulos[i]].findViewById(R.id.cv6EditCampo);
			break;
		}
	}

	public void lanzarcvMenos(View view) {
		int tagTabActual=Integer.parseInt(tabHost.getCurrentView().getTag().toString());

		i=tagTabActual;
		if (cvContadorModulos[i] > 0) {
			cvContadorModulos[i]--;
			((ViewManager) cvLayoutModulo[i][cvContadorModulos[i] + 1].getParent())
					.removeView(cvLayoutModulo[i][cvContadorModulos[i] + 1]); // Borro el
																		// modulo
			if (cvContadorModulos[i]==0){view.setVisibility(ImageButton.INVISIBLE);}															// anterior
		}

	}
	
	public void cvLanzarNuevoGenerico(View view){
		contadorGenericoExtra++;
		
		View view2=(View) view.getParent().getParent();
		tagTabActual=Integer.parseInt(view2.getTag().toString()); 
		tagTabActual=contadorGenericoExtra+2;
		tagTabCreado=tagTabActual+1; 
		Log.i("he crado el tag",Integer.toString(tagTabCreado));
		tabActual=tagTabActual+3; 
		tabCreado=tabActual+1; 
		FrameLayout scrollFrame=(FrameLayout) findViewById(android.R.id.tabcontent);
		// Estoy creando el tab numero tabcreado.
		tabExtra[contadorGenericoExtra-1] = (View) this.getLayoutInflater().inflate(
						R.layout.actividad_cv6_generico, null, true); // Añado con inflate. Lo hago en dos pasos
											// en este paso previo me guardo en un View					
											// el nuevo modulo								
		tabExtra[contadorGenericoExtra-1].setTag(tagTabCreado);	
		idTabExtra=findId();
		tabExtra[contadorGenericoExtra-1].setId(idTabExtra);
		scrollFrame.addView(tabExtra[contadorGenericoExtra-1]); // Añado este modulo en su
															    // layout (Frame con Scroll) de modulos
		tabHost.addTab(tabHost.newTabSpec("tab"+Integer.toString(tabCreado)).setIndicator("Titulo"+Integer.toString(tabCreado), null)
				.setContent(idTabExtra));
		
		// Ahoro el boton nuevo del tab que se ha lanzado se borra
		((ViewManager) view.getParent()).removeView(view);
		// Voy automaticamente al tab Creado
		tabHost.setCurrentTabByTag("tab"+Integer.toString(tabCreado));
		// Defino los elementos de los nuevos tabs
		// Recordar que los modulos con "+" para añadir informacion son:[cv2 cv3 cv4 cv6 cv7... maxEntradas]
		// Así que la primera posicion a usar aqui seria la 4 ->tagTabCreado
		cvLayoutModulos[tagTabCreado] = (LinearLayout) tabExtra[contadorGenericoExtra-1].findViewById(R.id.cv6LayoutModulos);
		cvLayoutModulos[tagTabCreado].setTag(tagTabCreado);
		cvLayoutModulo[tagTabCreado][cvContadorModulos[tagTabCreado]] = (View) findViewById(R.id.cv6LayoutModulo);
		
		cv6EditTitulo[contadorGenericoExtra]=(EditText) cvLayoutModulo[tagTabCreado][cvContadorModulos[tagTabCreado]].findViewById(R.id.cv6EditTituloCampo);
		cv6EditSubtitulo[contadorGenericoExtra][cvContadorModulos[tagTabCreado]]=(EditText) cvLayoutModulo[tagTabCreado][cvContadorModulos[tagTabCreado]].findViewById(R.id.cv6EditSubtituloCampo);
		cv6EditCampo[contadorGenericoExtra][cvContadorModulos[tagTabCreado]]=(EditText) cvLayoutModulo[tagTabCreado][cvContadorModulos[tagTabCreado]].findViewById(R.id.cv6EditCampo);
	}
	
	public void cvLanzarSiguiente(View view) {
		tabHost.setCurrentTab(tabHost.getCurrentTab()+1);
	}
	
	public void cvLanzarAnterior(View view) {
		tabHost.setCurrentTab(tabHost.getCurrentTab()-1);
	}
	public void lanzarcv1TomarFoto(View view) {
		Intent cameraIntent = new Intent(
				android.provider.MediaStore.ACTION_IMAGE_CAPTURE);
		startActivityForResult(cameraIntent, PETICION_CAMARA);
	}

	public void lanzarcv1CargarFoto(View view) {
		Intent intent = new Intent(this,
				es.cvmaker.upv.navegador.FileChooser.class);
		intent.putExtra("tipoFichero", "Imagen");
		startActivityForResult(intent, PETICION_CARGARFOTO);
	}
	static int id = 1;

	// Returns a valid id that isn't in use
	public int findId(){  
	    View v = findViewById(id);  
	    while (v != null){  
	        v = findViewById(++id);  
	    }  
	    return id++;  
	}
	

}
